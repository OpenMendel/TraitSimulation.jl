var documenterSearchIndex = {"docs":
[{"location":"#Trait-Simulation-Tutorial-1","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Authors: Sarah Ji, Janet Sinsheimer, Kenneth Lange","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"CurrentModule = TraitSimulation","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Modules = [TraitSimulation]","category":"page"},{"location":"#TraitSimulation.simulate-Tuple{GLMTrait}","page":"Trait Simulation Tutorial","title":"TraitSimulation.simulate","text":"simulate(trait::GLMTrait)\n\nthis for GLM trait\n\n\n\n\n\n","category":"method"},{"location":"#TraitSimulation.simulate-Tuple{LMMTrait}","page":"Trait Simulation Tutorial","title":"TraitSimulation.simulate","text":"simulate(trait::LMMTrait)\n\nthis for LMMtrait\n\n\n\n\n\n","category":"method"},{"location":"#TraitSimulation.vcobjtuple-Tuple{Array{VarianceComponent,1}}","page":"Trait Simulation Tutorial","title":"TraitSimulation.vcobjtuple","text":"this is a test for vcobjtuple that is compatible with VarianceComponentModels.jl\n\n\n\n\n\n","category":"method"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In this notebook we show how to use the TraitSimulation.jl package to simulate traits from genotype data from unrelateds or families on user-specified Generalized Linear Models (GLMs) or Linear Mixed Models (LMMs), respectively.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"The data we will be using is from the Mendel version 16[1] sample files. The data is described in examples under Option 28e in the Mendel Version 16 Manual Section 28.1,  page 279. It consists of simulated data where the two traits of interest have one contributing SNP and a sex effect.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We use the OpenMendel package SnpArrays.jl to read in the PLINK formatted SNP data. In example 2b, we follow Mendel Option 28e with the simulation parameters for Trait1 and Trait2 in Ped28e.out as shown below.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In both examples, you can specify your own arbitrary fixed effect sizes, variance components and simulation parameters as desired.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In the mathbfGenerating mathbfEffect mathbfSizes Section of Example 2), we show how the user can generate effect sizes that depend on the minor allele frequencies from a function such as an exponential or chisquare. To aid the user when they wish to include a large number of loci in the model, we created a function that automatically writes out the mean components. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"mathbfAT","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"mathbfTHE mathbfEND mathbfof mathbfExample mathbf1, we demo how to mathbfwrite mathbfthe mathbfresults of each simulation to a file on the users own machine.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Double check that you are using Julia version 1.0.3 or higher by checking the machine information","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"versioninfo()","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Julia Version 1.0.3\nCommit 099e826241 (2018-12-18 01:34 UTC)\nPlatform Info:\n  OS: macOS (x86_64-apple-darwin14.5.0)\n  CPU: Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.0 (ORCJIT, skylake)","category":"page"},{"location":"#Add-any-missing-packages-needed-for-this-tutorial:-1","page":"Trait Simulation Tutorial","title":"Add any missing packages needed for this tutorial:","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Note: For demonstration purposes, the generation of this Jupyter Notebook requires the use of the following registered packages: DataFrames.jl, SnpArrays.jl, StatsModels.jl, Random.jl, DelimitedFiles.jl, StatsBase.jl, and StatsFuns.jl. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"If it is your first time using these registered packages, you will first have to add the registered packages: DataFrames, SnpArrays, StatsModels, Random, LinearAlgebra, DelimitedFiles, Random, StatsBase by running the following code chunk in Julia's package manager:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"pkg> add DataFrames\npkg> add SnpArrays\n...\npkg> add StatsFuns","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"You can also use the package manager to add the TraitSimulation.jl package by running the following link: </br>","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"pkg> add \"https://github.com/sarah-ji/TraitSimulation.jl\"","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Only after all of the necessary packages have been added, load them into your working environment with the using command:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"using DataFrames, SnpArrays, StatsModels, Random, LinearAlgebra, DelimitedFiles, StatsBase, TraitSimulation, StatsFuns","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Reproducibility","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"For reproducibility, we set a random seed using the Random.jl package for each simulation using Random.seed!(1234).  If you wish to end up with different data, you will need to comment out these commands or use another value in Random.seed!().","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Random.seed!(1234);","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"The notebook is organized as follows:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Example 1: Generalized Linear Model In this example we show how to generate single or multiple traits from GLM's with a genetic variant in the fixed effects, but no residual familial correlation.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"(a) Single Trait:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In example (1a) we simulate a textbfSINGLE INDEPENDENT NORMAL TRAIT (b) Multiple Independent Traits:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In example (1b) we simulate textbfTWO INDEPENDENT TRAITS SIMULTANEOUSLY, one from a Normal distribution and one from a Poisson distribution.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Example 2: Linear Mixed Model In this example we show how to generate data with the additional additive genetic variance component or residual correlation among relatives. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"For convenience we use the common assumption that the residual covariance among two relatives can be captured by the additive genetic variance times twice the kinship coefficient. However, if you like you can specify your own variance components and their design matrices as long as they are positive semi definite using the @vc macro demonstrated in this example. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"(a) Single Trait:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In example (2a) we simulate a textbfSINGLE TRAIT CONTROLLING FOR FAMILY STRUCTURE","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"(b) Multiple Correlated Traits: (Mendel Example 28e Simulation)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We simulate textbfTWO CORRELATED TRAITS CONTROLLING FOR FAMILY STRUCTURE with simulation parameters, location = mu and scale = Sigma. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Example 3: Rare Variant Linear Mixed Model ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"The example also assumes an additive genetic variance component in the model which includes 20 rare SNPs, defined as snps with minor allele frequencies greater than 0.002 but less than 0.02.  In practice rare SNPs have smaller minor allele frequencies, but we are limited in this tutorial by the number of individuals in the data set. <br>","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We simulate a Single normal Trait controlling for family structure, with effect sizes generated as a function of the minor allele frequencies.","category":"page"},{"location":"#Reading-the-Mendel-28a-data-using-SnpArrays-1","page":"Trait Simulation Tutorial","title":"Reading the Mendel 28a data using SnpArrays","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"First use SnpArrays.jl to read in the SNP data","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"snpdata = SnpArray(\"traitsim28e.bed\", 212)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"212Ã253141 SnpArray:\n 0x03  0x03  0x00  0x03  0x03  0x03     0x02  0x02  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x02  0x02  0x03     0x00  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x03  0x02  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x02  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x00  0x00  0x00  0x00  0x03\n 0x03  0x02  0x00  0x03  0x03  0x03     0x02  0x03  0x00  0x03  0x00  0x03\n 0x03  0x03  0x00  0x03  0x03  0x03     0x02  0x03  0x00  0x03  0x00  0x03\n 0x03  0x02  0x00  0x03  0x03  0x03     0x02  0x02  0x00  0x02  0x00  0x03\n 0x03  0x02  0x00  0x03  0x03  0x03     0x03  0x03  0x00  0x03  0x00  0x03\n 0x03  0x02  0x00  0x03  0x03  0x03     0x00  0x02  0x00  0x02  0x00  0x03\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x02  0x00  0x02  0x00  0x03\n 0x03  0x02  0x00  0x03  0x03  0x03     0x02  0x02  0x00  0x02  0x00  0x03\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x03  0x00  0x02  0x02  0x02\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x02  0x00  0x00  0x03  0x00\n 0x03  0x02  0x00  0x02  0x02  0x03     0x02  0x03  0x00  0x03  0x00  0x03\n 0x03  0x03  0x00  0x02  0x02  0x03     0x02  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x02  0x03  0x00  0x02  0x02  0x00\n 0x03  0x03  0x00  0x02  0x02  0x03     0x02  0x03  0x00  0x00  0x02  0x02\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x03  0x00  0x00  0x03  0x00\n 0x03  0x02  0x00  0x03  0x03  0x03     0x02  0x03  0x00  0x00  0x02  0x02\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x02  0x03  0x00  0x00  0x03  0x00\n 0x03  0x03  0x00  0x03  0x03  0x03     0x00  0x03  0x00  0x02  0x02  0x02","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Store the FamID and PersonID of Individuals in Mendel 28e data","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"famfile = readdlm(\"traitsim28e.fam\", ',')\nFam_Person_id = DataFrame(FamID = famfile[:, 1], PID = famfile[:, 2])","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Note: Because later we will want to compare our results to the original results in the file,  we subset traits_original ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"traits_original = DataFrame(Trait1 = famfile[:, 7], Trait2 = famfile[:, 8])","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Transform sex variable from M/F to 1/-1 as does Mendel 28e data.  If you prefer you can use the more common convention of making one of the sexes the reference sex (coding it as zero) and make the other sex have the value 1.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"sex = map(x -> strip(x) == \"F\" ? -1.0 : 1.0, famfile[:, 5]) # note julia's ternary operator '?'","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"212-element Array{Float64,1}:\n -1.0\n -1.0\n  1.0\n  1.0\n -1.0\n -1.0\n  1.0\n  1.0\n -1.0\n  1.0\n -1.0\n  1.0\n -1.0\n  1.0\n  1.0\n  1.0\n -1.0\n  1.0\n  1.0\n  1.0\n  1.0\n  1.0\n  1.0\n  1.0\n  1.0","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Names of Variants:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We want to find the index of the causal snp, rs10412915, in the snp_definition file and then subset that snp from the genetic marker data above.  We first subset the SNP names into a vector called snpid","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"snpdef28_1 = readdlm(\"traitsim28e.bim\", Any; header = false)\nsnpid = map(x -> strip(string(x)), snpdef28_1[:, 1]) # strip mining in the data ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"253141-element Array{SubString{String},1}:\n \"rs3020701\"  \n \"rs56343121\" \n \"rs143501051\"\n \"rs56182540\" \n \"rs7260412\"  \n \"rs11669393\" \n \"rs181646587\"\n \"rs8106297\"  \n \"rs8106302\"  \n \"rs183568620\"\n \"rs186451972\"\n \"rs189699222\"\n \"rs182902214\"\n â®            \n \"rs188169422\"\n \"rs144587467\"\n \"rs139879509\"\n \"rs143250448\"\n \"rs145384750\"\n \"rs149215836\"\n \"rs139221927\"\n \"rs181848453\"\n \"rs138318162\"\n \"rs186913222\"\n \"rs141816674\"\n \"rs150801216\"","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We first need to find the position of the snp rs10412915.  If you wish to use another snp just change the rs number to another one that is found in the available genotype data, for example rs186913222.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"ind_rs10412915 = findall(x -> x == \"rs10412915\", snpid)[1]","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"236074","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We see that the causal snp, rs10412915, is the 236074th variant in the snp dataset.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Let's create a design matrix for the alternative model that includes sex and locus rs10412915.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"locus = convert(Vector{Float64}, @view(snpdata[:, ind_rs10412915]))\nX = DataFrame(sex = sex, locus = locus)","category":"page"},{"location":"#Example-1)-Multiple-Independent-Traits:-User-specified-distributions-1","page":"Trait Simulation Tutorial","title":"Example 1) Multiple Independent Traits: User specified distributions","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Here I simulate two independent traits simultaneously, one from a Normal distribution and the other from a Poisson Distribution.  We create the following 3 vectors to specify the simulation parameters of the two independent traits: ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"dist_type_vector link_type_vector  mean_formulas","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"#for multiple glm traits from different distributions\ndist_type_vector = [NormalResponse(4), PoissonResponse()]\nlink_type_vector = [IdentityLink(), LogLink()]\n\nmean_formulas = [\"40 + 3(sex) - 1.5(locus)\", \"2 + 2(sex) - 1.5(locus)\"]\n\nMultiple_GLM_traits_model_NOTIID = Multiple_GLMTraits(mean_formulas, X, dist_type_vector, link_type_vector)\nSimulated_GLM_trait_NOTIID = simulate(Multiple_GLM_traits_model_NOTIID)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"describe(Simulated_GLM_trait_NOTIID, stats = [:mean, :std, :min, :q25, :median, :q75, :max, :eltype])","category":"page"},{"location":"#Saving-Simulation-Results-to-Local-Machine-1","page":"Trait Simulation Tutorial","title":"Saving Simulation Results to Local Machine","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Write the newly simulated trait into a comma separated (csv) file for later use. Note that the user can specify the separator to '\\t' for tab separated, or another separator of choice. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Here we output the simulated traits and covariates for each of the 212 individuals, labeled by their pedigree ID and person ID.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Trait1_GLM = hcat(Fam_Person_id, Simulated_GLM_trait_NOTIID, X)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"#cd(\"/Users\") #change to home directory\nCSV.write(\"Trait1_GLM.csv\", Trait1_GLM)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"\"Trait1_GLM.csv\"","category":"page"},{"location":"#Example-2:-Linear-Mixed-Model-(with-additive-genetic-variance-component).-1","page":"Trait Simulation Tutorial","title":"Example 2: Linear Mixed Model (with additive genetic variance component).","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Examples 2a and 2c simulate single traits, while Example 2b simulates two correlated traits.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We make note that the user can extend the model in Example 2b to include more than 2 variance components using the @vc macro.","category":"page"},{"location":"#The-Variance-Covariance-Matrix-1","page":"Trait Simulation Tutorial","title":"The Variance Covariance Matrix","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We use the SnpArrays.jl package to find an estimate of the Kinship (Phi), the Genetic Relationship Matrix (GRM). ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We will use the same values of mathbfGRM, V_a, and V_e for both the mixed effect example and for the rare variant example.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Note that the residual covariance among two relatives is the additive genetic variance, V_a, times twice the kinship coefficient, Phi. The kinship matrix is derived from the genetic relationship matrix (GRM) across the common SNPs with minor allele frequency at least 0.05.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"GRM = grm(snpdata, minmaf=0.05)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"212x212 Array{Float64,2}:\n  0.498264     0.0080878    0.0164327      0.0246825    0.00181856\n  0.0080878    0.498054    -0.0212599      -0.0285927   -0.0226525 \n  0.0164327   -0.0212599    0.499442       -0.0219661   -0.00748536\n  0.253627    -0.00160532   0.282542        0.00612693  -0.00339125\n  0.126098     0.253365     0.128931       -0.0158446   -0.00633959\n -0.014971    -0.00266073  -0.00243384     0.00384757   0.0145936 \n -0.0221357    0.0100492   -0.0107012      -0.0148443   -0.00127783\n -0.01629     -0.00749253  -0.015372       -0.0163305   -0.00258392\n -0.016679     0.00353587  -0.0128844      -0.0332489   -0.00707839\n -0.0176101   -0.00996912  -0.0158473      -0.00675875  -0.0122339 \n -0.0162558    0.00938592   0.0064231      -0.00510882   0.0168778 \n -0.0167487    0.00414544  -0.00936538     -0.0134863    0.0020952 \n -0.031148     0.00112387  -0.010794        0.00383105   0.0198635                  \n -0.00865735  -0.00335548  -0.0148433       0.00806601  -0.0211537 \n  0.00296028   0.0043655   -0.0183683       0.0012496    0.00898193\n -0.0204601   -0.0270898   -0.00194048     -0.0185883   -0.0116621 \n -0.0174561   -0.0128509   -0.0155773      -0.0274183   -0.0063823 \n -0.00170995   0.0154211   -0.00168146     -0.00684865  -0.0067438 \n  0.00718047  -0.00525265  -0.00283975     0.0309601     0.0261103 \n -0.0170218   -0.00661916   0.0020924      -0.022858     0.0037451 \n  0.0142551    0.0208073    0.0096287       0.00598877   0.0094809 \n -0.00586031  -0.00733706   0.0339257       0.0109116   -0.0177771 \n  0.00299024  -0.0134027    0.0150825       0.00799507   0.0150077 \n  0.0246825   -0.0285927   -0.0219661       0.593999     0.0497083 \n  0.00181856  -0.0226525   -0.00748536      0.0497083    0.491743","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"V_A = [4 1; 1 4]\nV_E = [2.0 0.0; 0.0 2.0]\nI_n = Matrix{Float64}(I, size(GRM));","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Example 2a: Single Trait ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We simulate a Normal Trait controlling for family structure","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"mean_formula = [\"40 + 3(sex) - 1.5(locus)\"]","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"1-element Array{String,1}:\n \"40 + 3(sex) - 1.5(locus)\"","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Ex2a_model = LMMTrait(mean_formula, X, 4*(2*GRM) + 2*(I_n))\ntrait_2a = simulate(Ex2a_model)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"describe(trait_2a, stats = [:mean, :std, :min, :q25, :median, :q75, :max, :eltype])","category":"page"},{"location":"#Example-2b)-Multiple-Correlated-Traits:-(Mendel-Example-28e-Simulation)-1","page":"Trait Simulation Tutorial","title":"Example 2b) Multiple Correlated Traits: (Mendel Example 28e Simulation)","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"We simulate two correlated Normal Traits controlling for family structure, location = ÎŒ and scale = mathbfSigma. The corresponding variance covariance matrix as specified Mendel Option 28e, mathbfÎ, is generated here.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"FYI: To create a trait with different variance components change the elements of mathbfSigma. We create the variance component object variance_formula below, to simulate our traits in example 2b. While this tutorial only uses 2 variance components, we make note that the @vc macro is designed to handle as many variance components as needed. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"As long as each Variance Component is specified correctly, we can create a VarianceComponent Julia object for Trait Simulation:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"<!– &nbsp;  –> Example) Specifying more than 2 variance components (let V_E3 indicate an additional Environmental Variance component) ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"multiple_variance_formula = @vc kron(V_A , GRM) + kron(V_E1, I_n) + kron(V_E2, I_n) + kron(V_E3, I_n);","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"# @vc is a macro that creates a 'VarianceComponent' Type for simulation\nvariance_formula = @vc kron(V_A, GRM) + kron(V_E, I_n);","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"These are the formulas for the fixed effects, as specified by Mendel Option 28e.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"mean_formulas = [\"40 + 3(sex) - 1.5(locus)\", \"20 + 2(sex) - 1.5(locus)\"]","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"2-element Array{String,1}:\n \"40 + 3(sex) - 1.5(locus)\"\n \"20 + 2(sex) - 1.5(locus)\"","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Ex2b_model = LMMTrait(mean_formulas, X, variance_formula)\ntrait_2b = simulate(Ex2b_model)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Summary Statistics of Our Simulated Traits","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"describe(trait_2b, stats = [:mean, :std, :min, :max, :eltype])","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Summary Statistics of the Original Mendel 28e dataset Traits:","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Note we want to see similar values from our simulated traits!","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"describe(traits_original, stats = [:mean, :std, :min, :max, :eltype])","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Example 3) Rare Variant Linear Mixed Model with effect sizes as a function of the allele frequencies. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In this example we first subset only the rare SNP's with minor allele frequency greater than 0.002 but less than 0.02, then we simulate traits on 20 of the rare SNP's as fixed effects. For this demo, the indexing snpid[rare_index][1:2:40] allows us to subset every other rare snp in the first 40 SNPs, to get our list of 20 rare SNPs. Change the range and number of SNPs to simulate with more or less SNPs and from different regions of the genome. The number 20 is arbitrary and you can use more or less than 20 if you desire by changing the final number. You can change the spacing of the snps by changing the second number.  For example, snpid[rare_index][1:5:500] would give you 100 snps.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Here are the 20 SNP's that will be used for trait simulation in this example.  ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"# filter out rare SNPS, get a subset of uncommon SNPs with 0.002 < MAF < 0.02\nminor_allele_frequency = maf(snpdata)\nrare_index = (0.002 .< minor_allele_frequency < 0.02)\ndata_rare = snpdata[:, rare_index];","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"maf_20_rare_snps = minor_allele_frequency[rare_index][1:2:40]\nrare_snps_for_simulation = snpid[rare_index][1:2:40]","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"20-element Array{SubString{String},1}:\n \"rs3020701\"  \n \"rs181646587\"\n \"rs182902214\"\n \"rs184527030\"\n \"rs10409990\" \n \"rs185166611\"\n \"rs181637538\"\n \"rs186213888\"\n \"rs184010370\"\n \"rs11667161\" \n \"rs188819713\"\n \"rs182378235\"\n \"rs146361744\"\n \"rs190575937\"\n \"rs149949827\"\n \"rs117671630\"\n \"rs149171388\"\n \"rs188520640\"\n \"rs142722885\"\n \"rs146938393\"","category":"page"},{"location":"#Generating-Effect-Sizes-1","page":"Trait Simulation Tutorial","title":"Generating Effect Sizes","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In practice rare SNPs have smaller minor allele frequencies but we are limited in this tutorial by the number of individuals in the data set. We use generated effect sizes to evaluate mu_rare20 on the following Dataframe: <br> ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"geno_rare20_converted = convert(DataFrame, convert(Matrix{Float64}, @view(data_rare[:, 1:2:40])))\nnames!(geno_rare20_converted, Symbol.(rare_snps_for_simulation))","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Chisquared Distribution (df = 1)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Generating Effect Sizes Based on MAF","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"For demonstration purposes, we simulate effect sizes from the Chi-squared(df = 1) distribution, where we use the minor allele frequency (maf) as x and find f(x) where f is the pdf for the Chi-squared (df = 1) density, so that the rarest SNP's have the biggest effect sizes. The effect sizes are rounded to the second digit, throughout this example. Notice there is a random +1 or -1, so that there are effects that both increase and decrease the simulated trait value.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In addition to the Chi-Squared distribution, we also demo how to simulate from the Exponential distribution, where we use the minor allele frequency (maf) as x and find f(x) where f is the pdf for the Exponential density.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"# Generating Effect Sizes from Chisquared(df = 1) density\nn = length(maf_20_rare_snps)\nchisq_coeff = zeros(n)\n\nfor i in 1:n\n    chisq_coeff[i] = sign(rand() - .5) * chisqpdf(1, maf_20_rare_snps[i])/5.0\nend","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Take a look at the simulated coefficients on the left, next to the corresponding minor allele frequency. Notice the rarer SNPs have the largest absolute values for their effect sizes.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Ex3_rare = round.([chisq_coeff maf_20_rare_snps], digits = 3)\nEx3_rare = DataFrame(Chisq_Coefficient = Ex3_rare[:, 1] , MAF_rare = Ex3_rare[:, 2] )","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"simulated_effectsizes_chisq = Ex3_rare[:, 1]","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"20-element Array{Float64,1}:\n -0.616\n -0.666\n -0.818\n -0.575\n  0.818\n  1.159\n -0.945\n -0.818\n  0.945\n -1.641\n -0.666\n  1.159\n  1.641\n -1.159\n -0.575\n  1.641\n  1.641\n -1.641\n  0.575\n -1.159","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Exponential Distribution Here we show how to generate effect sizes for the 20 rare snp's from the Exponential Distribution, where we use the maf as x and find f(x) where f is the pdf for the Exponential density","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"simulated_effectsizes_exp = round.(6*exp.(-200*maf_20_rare_snps), digits = 3)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"20-element Array{Float64,1}:\n 0.221\n 0.354\n 0.909\n 0.138\n 0.909\n 2.336\n 1.457\n 0.909\n 1.457\n 3.744\n 0.354\n 2.336\n 3.744\n 2.336\n 0.138\n 3.744\n 3.744\n 3.744\n 0.138\n 2.336","category":"page"},{"location":"#Function-for-Mean-Model-Expression-1","page":"Trait Simulation Tutorial","title":"Function for Mean Model Expression","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In some cases a large number of variants may be used for simulation. Thus, in this example we create a function where the user inputs a vector of coefficients and a vector of variants for simulation, then the function outputs the mean model expression. ","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"The function FixedEffectTerms, creates the proper evaluated expression for the simulation process, using the specified vectors of coefficients and snp names. The function outputs evaluated_fixed_expression which will be used to estimate the mean effect, ÎŒ in our mixed effects model. We make use of this function in this example, instead of having to write out all 20 of the coefficients and variant locus names.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"rare_snps_for_simulation","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"20-element Array{SubString{String},1}:\n \"rs3020701\"  \n \"rs181646587\"\n \"rs182902214\"\n \"rs184527030\"\n \"rs10409990\" \n \"rs185166611\"\n \"rs181637538\"\n \"rs186213888\"\n \"rs184010370\"\n \"rs11667161\" \n \"rs188819713\"\n \"rs182378235\"\n \"rs146361744\"\n \"rs190575937\"\n \"rs149949827\"\n \"rs117671630\"\n \"rs149171388\"\n \"rs188520640\"\n \"rs142722885\"\n \"rs146938393\"","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"function FixedEffectTerms(effectsizes::AbstractVecOrMat, snps::AbstractVecOrMat)\n # implementation\n    fixed_terms = \"\"\nfor i in 1:length(simulated_effectsizes_chisq) - 1\nexpression = \" + \" * string(simulated_effectsizes_chisq[i]) * \"(\" * rare_snps_for_simulation[i] * \")\"\n    fixed_terms = fixed_terms * expression\nend\n    return String(fixed_terms)\nend\n","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"FixedEffectTerms (generic function with 1 method)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"mean_formula_rare = FixedEffectTerms(simulated_effectsizes_chisq, rare_snps_for_simulation)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"\" + -0.616(rs3020701) + -0.666(rs181646587) + -0.818(rs182902214) + -0.575(rs184527030) + 0.818(rs10409990) + 1.159(rs185166611) + -0.945(rs181637538) + -0.818(rs186213888) + 0.945(rs184010370) + -1.641(rs11667161) + -0.666(rs188819713) + 1.159(rs182378235) + 1.641(rs146361744) + -1.159(rs190575937) + -0.575(rs149949827) + 1.641(rs117671630) + 1.641(rs149171388) + -1.641(rs188520640) + 0.575(rs142722885)\"","category":"page"},{"location":"#Example-3)-Mixed-effects-model-Single-Trait-and-Rare-Variants:-1","page":"Trait Simulation Tutorial","title":"Example 3) Mixed effects model Single Trait and Rare Variants:","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"rare_20_snp_model = LMMTrait([mean_formula_rare], geno_rare20_converted, 4*(2*GRM) + 2*(I_n))\ntrait_rare_20_snps = simulate(rare_20_snp_model)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"describe(trait_rare_20_snps, stats = [:mean, :std, :min, :max, :eltype])","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Saving Simulation Results to Local Machine","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Here we output the simulated trait values for each of the 212 individuals, labeled by their pedigree ID and person ID.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"In addition, we output the genotypes for the variants used to simulate this trait.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Trait3_mixed = hcat(Fam_Person_id, trait_rare_20_snps, geno_rare20_converted)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"Coefficients = DataFrame(Coefficients = simulated_effectsizes_chisq)\nSNPs_rare = DataFrame(SNPs = rare_snps_for_simulation)\nTrait3_mixed_sim = hcat(Coefficients, SNPs_rare)","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"#cd(\"/Users\") #change to home directory\nusing CSV\nCSV.write(\"Trait3_mixed.csv\", Trait3_mixed)\nCSV.write(\"Trait3_mixed_sim.csv\", Trait3_mixed_sim);","category":"page"},{"location":"#Citations:-1","page":"Trait Simulation Tutorial","title":"Citations:","text":"","category":"section"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"[1] Lange K, Papp JC, Sinsheimer JS, Sripracha R, Zhou H, Sobel EM (2013) Mendel: The Swiss army knife of genetic analysis programs. Bioinformatics 29:1568-1570.`","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"[2] OPENMENDEL: a cooperative programming project for statistical genetics. Hum Genet. 2019 Mar 26. doi: 10.1007/s00439-019-02001-z.","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"<!– ## Table of Contents","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"  pages = [\n    \"Home\"       => \"index.md\",\n    \"Overview\"   => \"man/overview.md\",\n    \"Examples\"   => \"man/examples.md\",\n  ]","category":"page"},{"location":"#","page":"Trait Simulation Tutorial","title":"Trait Simulation Tutorial","text":"–>","category":"page"}]
}
